const state = {
  conversations:{
    data: [],
    links: {},
    meta: {}
  },
};

const mutations = {
setConversations(state,tasks) {
    state.conversations = conversations;
  },
  setMessage(state,message) {
    state.message = message;
  },
  removeConversationFromState(state, conversationId){
    const index = state.conversations.data.findIndex(conversation => conversation.id === conversationId);
    if (index !== -1) {
      state.conversations.data.splice(index, 1);
    }
  },





};

const actions = {
    loadConvesations({ commit }, { slug, page }) {
       return axios.get(`/api/v1/projects/${slug}/conversations?page=${page}`)
        .then(response => {
          commit('setConversations', response.data);
        }).catch(error=>{
        commit('setConversations', { page, tasks: { data: [], links: {}, meta: {} } });
        });
    },

};

export default{
  namespaced: true,
  state,
  mutations,
  actions,
}
