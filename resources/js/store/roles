const state = {
  roles:[],
  errors:{}
};

const mutations = {
  setRoles(state,data){
    state.roles=data;
  },

  setErrors(state,error){
  },

  roleUpdate(state, updatedRole) {
    const index = state.roles.findIndex(role => role.id === updatedRole.id);
    if (index !== -1) {
      state.roles.splice(index, 1, updatedRole);
    }
  },

  addRole(state, newRole)
  {
    state.roles.push(newRole);
  },

  roleDelete(state, roleIdToDelete) {
    state.roles = state.roles.filter(role => role.id !== roleIdToDelete);
  },
};

const actions = {
  loadRoles({ commit }) {
      return axios.get(`/api/v1/admin/roles`)
        .then(response => {
        commit('setRoles', response.data);
        })
        .catch(error => {
          console.log(error.response.data.errors);
        })
      },
};

export default{
  namespaced: true,
  state,
  mutations,
  actions,
}